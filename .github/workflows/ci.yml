name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    - name: Run your tests
      run: |
        python your_script.py

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Deploy to Hetzner server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_IP }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        #port: 22
        script: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker run --restart

          
          docker stop microservice-1container
          docker rm microservice-1container
          cd /root/micro/microservice-1
          docker build --tag microservice-1:latest .
          docker run --name microservice-1container -d microservice-1:latest

          docker stop microservice-2container
          docker rm microservice-2container
          cd /root/micro/microservice-2
          docker build --tag microservice-2:latest .
          docker run --name microservice-2container -d microservice-2:latest

          docker stop microservice-3container
          docker rm microservice-3container
          cd /root/micro/microservice-3
          docker build --tag microservice-3:latest .
          docker run --name microservice-3container -d microservice-3:latest

          docker stop microservice-4container
          docker rm microservice-4container
          cd /root/micro/microservice-4
          docker build --tag microservice-4:latest .
          docker run --name microservice-4container -d microservice-4:latest

          cd /root/micro
          docker-compose down
          docker-compose pull
          docker-compose up -d --build


          
          docker image prune -a --force
    




    

   
